image: docker:latest

stages:
  - version
  - deploy
  
deploy:
  stage: deploy
  services:
    - name: docker:dind
  before_script:
    - export RELEASE=`cat VERSION`
    - docker build --build-arg RELEASE="$RELEASE" -t stangirard/serverless .
    - docker tag stangirard/serverless:latest stangirard/serverless:"$RELEASE"
  script:
    - echo "$DOCKER_PASS" | docker login --username "$DOCKER_USER" --password-stdin
    - docker push stangirard/serverless:latest;
    - docker push stangirard/serverless:"$RELEASE";
  only:
    changes:
      - VERSION
  except:
    - schedules

version:on-schedule:
  stage: version
  before_script:
    - apk update -q && apk add bash git
    - 'which ssh-agent || ( apt-get update -qy && apt-get install openssh-client -qq )'
    - eval `ssh-agent -s`
    - echo "${SSH_PRIVATE_KEY}" | tr -d '\r' | ssh-add - > /dev/null # add ssh ke
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_PUBLIC_KEY" >> ~/.ssh/id_rsa.pub
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ./bin/version-comparator.sh $REPOSITORY
    - git config --global user.email "${CI_EMAIL}"
    - git config --global user.name "${CI_USERNAME}"
    - VERSION=`cat VERSION`
    - git add VERSION # Force add PDF since we .gitignored it
    - git commit -m "VERSION=${VERSION}" || echo "No changes, nothing to commit!"
    - git remote rm origin && git remote add origin git@gitlab.com:$CI_PROJECT_PATH.git
    - git push origin HEAD:$CI_COMMIT_REF_NAME # Pushes to the same branch as the trigger
  variables:
    REPOSITORY: https://github.com/serverless/serverless  
  only:
    - schedules

